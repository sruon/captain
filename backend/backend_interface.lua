---@class Entity
---@field name string
---@field serverId number
---@field targIndex number
---@field x string
---@field y string
---@field z string
---@field r string
---@field hpp number

---@class PlayerEntity : Entity
---@field mJob string
---@field sJob string
---@field mJobLevel number
---@field sJobLevel number
---@field zoneID number
---@field zoneName string

---@class Item
---@field Id integer
---@field Index integer
---@field Count integer
---@field Flags integer
---@field Price integer
---@field Extra integer[]

---@class TextBox
---@field name string
---@field title string
---@field text string
---@field visible boolean
---@field show fun(self: TextBox)
---@field hide fun(self: TextBox)
---@field updateText fun(self: TextBox, text: string | table)
---@field updateTitle fun(self: TextBox, text: string | table)

---@class File
---@field path string
---@field stream FileHandle
---@field locked boolean
---@field scheduled boolean
---@field buffer string
---@field read fun(self: File): string
---@field flush fun(self: File)
---@field append fun(self: File, text: string)
---@field clear fun(self: File)

---@class KeybindParams
---@field key string      -- The key combination to bind (e.g., "Ctrl+Shift+A").
---@field down boolean?   -- Whether the keybind is for a key-down event.
---@field alt boolean?    -- Whether the Alt key is part of the combination.
---@field apps boolean?   -- Whether the Apps key is part of the combination.
---@field ctrl boolean?   -- Whether the Ctrl key is part of the combination.
---@field shift boolean?  -- Whether the Shift key is part of the combination.
---@field win boolean?    -- Whether the Windows key is part of the combination.

---@class BackendBase
---@field fileOpen fun(path: string): File
---@field fileAppend fun(file: File, text: string)
---@field fileRead fun(file: File) : string
---@field fileWrite fun(file: File)
---@field fileClear fun(file: File)
---@field databaseOpen fun(path: string, opts?: { [string]: any }): Database
---@field csvOpen fun(path: string, opts?: { [string]: any }): CSV
---@field notificationCreate fun(emitter: string,title: string, notificationData: { [string]: any })
---@field parsePacket fun(dir: string, packet: string): any | nil -- Parses a raw packet and returns the parsed data

---@class BackendInterface
---@field register_event_load fun(func: fun())
---@field register_event_unload fun(func: fun())
---@field register_command fun(func: fun(args: string[]))
---@field register_event_incoming_packet fun(func: fun(id: number, data: number[], size: number) : boolean, number[] | nil)
---@field register_event_outgoing_packet fun(func: fun(id: number, data: number[], size: number) : boolean)
---@field register_on_zone_change fun(func: fun(zone: number))
---@field register_on_client_ready fun(func: fun(zone: number))
---@field register_event_incoming_text fun(func: fun(mode: number, text: string))
---@field register_event_prerender fun(func: fun())
---@field is_retail fun(): boolean
---@field dir_exists fun(path: string): boolean
---@field file_exists fun(path: string): boolean
---@field list_files fun(path: string): string[]
---@field create_dir fun(filename: string)
---@field textBox fun(id: string) : TextBox
---@field script_path fun(): string
---@field msg fun(header: string, message: string)
---@field warnMsg fun(header: string, message: string)
---@field errMsg fun(header: string, message: string)
---@field player_name fun(): string
---@field zone fun(): number
---@field zone_name fun(zone: number?): string
---@field target_index fun(): number
---@field target_name fun(): string
---@field target_hpp fun(): number
---@field get_player_entity_data fun(): PlayerEntity
---@field get_target_entity_data fun(): Entity
---@field get_monster_ability_name fun(id: number): string
---@field get_job_ability_name fun(id: number): string
---@field get_weapon_skill_name fun(id: number): string
---@field get_spell_name fun(id: number): string
---@field get_item_name fun(id: number): string
---@field get_item_flags fun(id: number): integer
---@field get_key_item_name fun(id: number): string
---@field get_mob_by_index fun(index: number): Entity?
---@field get_mob_by_id fun(id: number): Entity?
---@field get_inventory_item fun(container: integer, index: integer): Item?
---@field get_inventory_items fun(container: integer): Item[]?
---@field get_server_ip fun(): integer
---@field get_client_build_string fun(): string
---@field is_mob fun(index: number): boolean
---@field is_npc fun(index: number): boolean
---@field schedule fun(func: fun(), delay: number)
---@field doWidescan fun()
---@field doCheck fun(index: number)
---@field injectPacket fun(id: number, content: number[])
---@field registerKeyBind fun(params: KeybindParams, command: string)
---@field deregisterKeyBind fun(params: KeybindParams)
---@field loadConfig fun(name: string, defaults: table): table
---@field saveConfig fun(name: string)
---@field notificationsRender fun(notifications: Notification[]): number
---@field reloadSignal boolean
---@field reload fun()
---@field forever fun(func: fun(), delay: number, ...: any)
---@field convert_int_to_float fun(raw: number): number
---@field get_resolution_width fun(): number
---@field get_resolution_height fun(): number
---@field configMenu fun()
